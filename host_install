#!/bin/bash -ei

GITHUB=emitchgustafson
KERNEL_REV=4.4.30

KERNEL_BRANCH=2016q3-4.4
XEN_BRANCH=2016q3-4.6.1
QEMU_BRANCH=2016q3-2.3.0

KERNEL_DIR=kernel_src
XEN_DIR=xen_src
QEMU_DIR=qemu_xen

for arg in "$@"
do
   $arg
done

sudo apt-get update
sudo apt-get upgrade
sudo apt-get install git -y
sudo apt-get install bin86 -y
sudo apt-get install bcc -y
sudo apt-get install python-dev -y
sudo apt-get install iasl -y
sudo apt-get install uuid-dev -y
sudo apt-get install libperl-dev -y
sudo apt-get install libgtk2.0-dev -y
sudo apt-get install libaio-dev -y
sudo apt-get install libyajl-dev -y
sudo apt-get install bison -y
sudo apt-get install libc6-dev-i386 -y
sudo apt-get install texinfo -y
sudo apt-get install libsdl2-dev -y
sudo apt-get install libssl-dev -y
sudo apt-get install mesa-common-dev -y
sudo apt-get install libepoxy-dev -y
sudo apt-get install libdrm-dev -y
sudo apt-get install libgbm-dev -y
sudo apt-get install libx11-dev -y
sudo apt-get install autoconf -y
sudo apt-get install libncurses5-dev -y
sudo apt-get install libglib2.0-dev -y
sudo apt-get install libpixman-1-dev -y
sudo apt-get install libsdl-dev -y

sudo cp ubuntu.cfg /

if ! [ -a /etc/grub.d/19_xengt ]
then
   sudo cp 19_xengt /etc/grub.d/19_xengt
   sudo chmod 755 /etc/grub.d/19_xengt
   sudo chgrp root /etc/grub.d/19_xengt
   sudo chown root /etc/grub.d/19_xengt
else
   echo "-----grub.d already updated"
fi

if [ "$(cat /etc/initramfs-tools/modules | grep -o  xengt)" == "" ]
then
   sudo chmod 777 /etc/initramfs-tools/modules
   echo "xengt" >> /etc/initramfs-tools/modules
   echo "kvm" >> /etc/initramfs-tools/modules
   sudo chmod 644 /etc/initramfs-tools/modules
else
   echo "-----modules already added to /modules"
fi

#------------------------------------------------------------------------------

cd ~/
if ! [ -a $KERNEL_DIR ]
then
   git clone https://github.com/$GITHUB/igvtg-kernel -b $KERNEL_BRANCH $KERNEL_DIR
else
   echo "-----kernel already exsists"
fi
cd $KERNEL_DIR/
if ! [ -a .config ]
then
   cp config-4.4.0-host .config
fi
make -j8 && sudo make modules_install
sudo mkinitramfs -o /boot/initrd.img-$KERNEL_REV -v $KERNEL_REV-vgt+
sudo cp arch/x86/boot/bzImage /boot/vmlinuz-$KERNEL_REV
sudo cp vgt.rules /etc/udev/rules.d
chmod a+x vgt_mgr
sudo cp vgt_mgr /usr/bin


cd ~/

#------------------------------------------------------------------------------

if ! [ -a $XEN_DIR ]
then
   git clone https://github.com/$GITHUB/igvtg-xen -b $XEN_BRANCH $XEN_DIR
else
   echo "-----xen(igvt) already exsists"
fi
if ! [ -a $QEMU_DIR ]
then
   git clone https://github.com/$GITHUB/igvtg-qemu.git -b $QEMU_BRANCH $QEMU_DIR
else
   echo "-----xen(igvt) already exsists"
fi
cp -r $QEMU_DIR $XEN_DIR/tools/qemu-xen
cd $XEN_DIR
sed -i '/QEMU_UPSTREAM_URL/s:http\://xenbits.xen.org/git-http/qemu-upstream-4.6-testing.git:$(XEN_ROOT)/tools/qemu-xen:' Config.mk
sed -i '/QEMU_UPSTREAM_URL/s:git\://xenbits.xen.org/qemu-upstream-4.6-testing.git:$(XEN_ROOT)/tools/qemu-xen:' Config.mk
./autogen.sh
./configure --prefix=/usr --disable-qemu-traditional --enable-rombios
make -j8 xen tools
sudo cp xen/xen.gz /boot/xen-vgt.gz
sudo make install-tools PYTHON_PREFIX_ARG=

#------------------------------------------------------------------------------

if ! [ -a ~/setup ]
then
   #Determine which network interface to use
   ETHER=$(ip addr | grep 2: | grep -o "e.*:" | cut -d ":" -f 1 -)

   #Install bridge utils
   sudo  apt-get install bridge-utils -y

   #setup script to run on boot to start xencommons
   echo "#!/bin/bash" > ~/setup
   echo "sudo /etc/init.d/xencommons start" >> ~/setup
   echo "sudo brctl addbr xenbr0" >> ~/setup
   echo "sudo brctl addif xenbr0 $ETHER" >> ~/setup
   echo "sudo ifconfig $ETHER 0" >> ~/setup
   echo "sudo dhclient xenbr0" >> ~/setup
#   echo "sudo service network-manager restart" >> ~/setup
   sudo chmod +x ~/setup

#   sudo chmod ugo+x startXen
#   sudo mv startXen /etc/init.d/startXen
#   sudo update-rc.d startXen defaults
else
   echo "-----xen start-up script already created"
fi


sudo update-grub


if !  [ -a /xen-disks ]
then
   sudo mkdir /xen-disks
   sudo chmod 777 /xen-disks
else
   echo "-----xen-disks already exsists"
fi

cd /xen-disks

if ! [ -a ubuntu-16.04-desktop-amd64.iso ]
then
   wget releases.ubuntu.com/16.04/ubuntu-16.04-desktop-amd64.iso 
else
   echo "-----Ubuntu .iso already exsists"
fi

if ! [ -a ubuntu1.img ]
then
   echo "Generating blank .img file for guest - may take a moment"
   dd if=/dev/zero of="ubuntu1.img" bs=1M count=15000
else
   echo "-----guest .img already exsists"
fi

sudo mv /ubuntu.cfg /etc/xen/ubuntu.cfg
